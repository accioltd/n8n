# UP with `docker compose --profile crawl4ai up -d --force-recreate`
# DOWN with `docker compose --profile crawl4ai down --remove-orphans`

services:
  # ──────────────────────────────────────────────────────────────
  # 1) PostgreSQL Database
  # ──────────────────────────────────────────────────────────────
  postgres:
    container_name: postgres_container
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: n8n
      POSTGRES_DB: n8n
    ports:
      - "5450:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped

  # ──────────────────────────────────────────────────────────────
  # 2) n8n Workflow Platform
  # ──────────────────────────────────────────────────────────────
  n8n:
    container_name: n8n_container
    build:
      context: .
      dockerfile: Dockerfile
    image: n8n-marker:latest
    env_file:
      - .env
    depends_on:
      - postgres
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/data
      - ./credentials/credentials.json:/tmp/credentials.json:ro
      - ./workflows:/workflows:ro
    restart: unless-stopped

  n8n_workflow_init:
    image: n8n-marker:latest
    profiles: ["init"]
    entrypoint: /bin/bash
    command:
      - -eu
      - -c
      - |
        shopt -s nullglob

        # 1) import credentials
        for f in /credentials/*.json; do
          echo "Importing credentials: $${f##*/}"
          n8n import:credentials --input "$$f"
        done

        # 2) import workflows
        for f in /workflows/*.json; do
          echo "Importing workflow: $${f##*/}"
          n8n import:workflow --input "$$f"
        done

        echo "✓ All credentials & workflows imported."
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - n8n_data:/data
      - ./credentials:/credentials:ro
      - ./workflows:/workflows:ro
    restart: "no"

  # ──────────────────────────────────────────────────────────────
  # 2.1) n8n Workflow Exporter (profile-guarded)
  # Run with `docker compose --profile export run --rm n8n_workflow_export`
  # ──────────────────────────────────────────────────────────────
  n8n_workflow_export:
    image: n8n-marker:latest
    profiles: ["export"]
    entrypoint: /bin/bash
    command: >
      -c '
      mkdir -p /exported_workflows &&
      n8n export:workflow --all --separate --output=/exported_workflows &&
      echo "✓ All workflows exported."

      mkdir -p /exported_credentials &&
      n8n export:credentials --all --output=/exported_credentials/credentials.json &&
      echo "✓ All credentials exported to ./credentials/credentials.json"
      '
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - n8n_data:/data
      - ./workflows:/exported_workflows
      - ./credentials:/exported_credentials
    restart: "no"

  # ──────────────────────────────────────────────────────────────
  # 3) Crawl4AI’s private Redis (profile-guarded)
  # ──────────────────────────────────────────────────────────────
  crawl4ai_redis:
    image: redis:7-alpine
    container_name: crawl4ai_redis_container
    profiles:
      - crawl4ai
    # no ports → only reachable on Compose’s project_default network
    restart: unless-stopped

  # ──────────────────────────────────────────────────────────────
  # 4) Crawl4AI Server (profile-guarded)
  # ──────────────────────────────────────────────────────────────
  crawl4ai:
    image: unclecode/crawl4ai:0.6.0-r2
    container_name: crawl4ai_container
    profiles:
      - crawl4ai
    env_file:
      - .env
    ports:
      - "11235:11235"
    depends_on:
      - crawl4ai_redis
    tmpfs:
      - /dev/shm:size=1g

volumes:
  n8n_data:
  pg_data:
# no networks: everyone joins the default Compose project network
